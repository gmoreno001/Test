select(-totalpop_0812.x, -totalpop_0812.y, -totfam_0812.y, -tot_hh_0812.x, -tot_hh_0812.y) %>%
rename(totfam_0812.x = totfam_0812)
acs_df <- acs_df %>%
select(-totalpop_0812.x, -totalpop_0812.y, -totfam_0812.y, -tot_hh_0812.x, -tot_hh_0812.y)
# CHECKS
acs_df %>% select(ends_with(".x") | ends_with(".y")) %>% View(.)
acs_list <- list(age_gender, race, fborn_resid, hhold_fam, education, poverty, hhold_income,
pub_asst, fam_inc, lf_unemployment, pop_notinlf, housing)
acs_df <- acs_list %>% reduce(full_join, by=c("GEOID", "NAME"))
acs_df <- acs_df %>%
select(-totalpop_0812.x, -totalpop_0812.y, -totfam_0812.y, -tot_hh_0812.x, -tot_hh_0812.y) %>%
rename(totfam_0812 = totfam_0812.x)
# CHECKS
acs_df %>% select(ends_with(".x") | ends_with(".y")) %>% View(.)
View(acs_df)
?starts_with
race <- all_vars1 %>%
rename(
totalpop_0812 = B01001_001,
whitelatpop_0812 = B03002_013,
nlwhitepop_0812 = B03002_003,
blklatpop_0812 = B03002_014,
nlblkpop_0812 = B03002_004,
latpop_0812 = B03002_012) %>%
mutate(
pnlb_0812 = (nlblkpop_0812/totalpop_0812)*100,
plat_0812 = (latpop_0812/totalpop_0812)*100) %>%
select(-starts_with("B",ignore.case = FALSE))
View(race)
names(acs_df)
# CLEAR ENVIRONMENT
rm(list = ls())
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogs
blog
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogd
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blog
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_available()
blogdown::hugo_version()
blogdown::stop_server()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
knitr::opts_chunk$set(comment = "#")
# comment out to regenerate plots, output, etc.
knitr::opts_chunk$set(echo = FALSE, eval = FALSE)
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::preview_site()
rm(list = ls())
# READ IN LIBRARIES
library(tidyverse) ; library(lubridate) ; library(hrbrthemes) ; library(waffle) ; library(ggplot2) ; library(dplyr)
# CREATE TIME DATA FRAME
start_date <- as.Date("2020-01-01")
end_date <- as.Date("2020-12-31")
time <- tibble(date = seq(start_date, end_date, by = "1 day"))
time$week <- format(time$date, "%W")
time$day <- format(time$date, "%A")
time$day_n <- format(time$date, "%u")
time$month <- format(time$date, "%B")
time$month_n <- format(time$date, "%m")
time$quarter <- quarter(time$date) # optional to specify `with_year = TRUE`
#time$week <- seq(1, 13, 7)
#time$n <- wday(time$date)
#time$day <- as.Date(time$date, format = "%A")
# IMPORT ACTIVITIES DATA
activities <- read.csv("C:/Users/John Jay REC/Downloads/activities_df.csv") #366 obs 6 vars
# CHECK
#activities %>% filter(workout_or_not == "?" | mat_pt_mobility_session == "?" | incidental_exercise == "?") %>% View(.)
# Replace DNT with 0
activities <- activities %>%
mutate(workout_or_not = replace(workout_or_not, workout_or_not == "DNT", 0),
mat_pt_mobility_session = replace(mat_pt_mobility_session, mat_pt_mobility_session == "DNT", 0),
incidental_exercise = replace(incidental_exercise, incidental_exercise == "DNT", 0)) %>%
mutate(workout_or_not = as.numeric(workout_or_not),
mat_pt_mobility_session = as.numeric(mat_pt_mobility_session),
incidental_exercise = as.numeric(incidental_exercise))
#
#str(activities)
# CONVERT DATE
activities$date <- as.Date(activities$date ,format = "%m/%d/%Y")
# JOIN ACTIVITIES DATA TO TIME DATA
df <- left_join(time, activities, by = c("date")) #366 obs 12 vars
# COMPUTE SUM OF ACTIVITIES FOR EACH DAY
df <- df %>%
mutate(sum_workout_mobility = workout_or_not + mat_pt_mobility_session,
sum_workout_incidental = workout_or_not + incidental_exercise,
sum_all = workout_or_not + mat_pt_mobility_session + incidental_exercise)
# CONVERT TO FACTOR WITH LABELS
df <- df %>% mutate(quarter= factor(quarter, levels=c(1,2,3,4),
labels=c("Jan to March", "April to June", "July to Sept", "Oct to Dec")),
sum_all = factor(sum_all, levels = c(0,1,2,3),
labels = c("0 recorded activity", "1 activity", "2 activities", "3 activities")))
# by_week <- df %>% group_by(week) %>%
#   summarise(count_workout_mobility = sum(sum_workout_mobility),
#             count_workout_incidental = sum(sum_workout_incidental),
#             count_all = sum(sum_all)) %>% ungroup()
# by_month <- df %>% group_by(month_n, month) %>%
#   summarise(count_workout_mobility = sum(sum_workout_mobility),
#             count_workout_incidental = sum(sum_workout_incidental),
#             count_all = sum(sum_all))
# best looking results b/c obscures, helpfully, times where was out of commission due to procedures
# by_quarter <- df %>% group_by(quarter) %>%
#   summarise(count_workout_mobility = sum(sum_workout_mobility),
#             count_workout_incidental = sum(sum_workout_incidental),
#             count_all = sum(sum_all))
# EVERY TWO MONTHS SO SIX DATA POINTS?
# PLOT
# ggplot(by_week,aes(x=week, y=count_all, group = 1)) + geom_line(color = "Steelblue", size = 1)
# ggplot(by_month,aes(x=month_n, y=count_all, group = 1)) + geom_line(color = "Steelblue", size = 1)
# ggplot(by_quarter,aes(x=quarter, y=count_all, group = 1)) + geom_line(color = "Steelblue", size = 1)
#
#df1 <- df %>% select(date, week, day, day_n, month, month_n, quarter, starts_with("sum")) %>% View()
# SOURCE: https://rud.is/rpubs/building-waffle-charts.html
# View(storms)
# storms_df <- storms %>% filter(year >= 2010) %>% count(year, status)
# str(storms_df)
#
# ggplot(storms_df, aes(fill = status, values = n)) +
#   geom_waffle(color = "white", size = .25, n_rows = 10, flip = TRUE) +
#   facet_wrap(~year, nrow = 1, strip.position = "bottom") +
#   scale_x_discrete() +
#   scale_y_continuous(labels = function(x) x * 10, # make this multiplier the same as n_rows
#                      expand = c(0,0)) +
#   ggthemes::scale_fill_tableau(name=NULL) +
#   coord_equal() +
#   labs(title = "Faceted Waffle Bar Chart", subtitle = "{dplyr} storms data", x = "Year", y = "Count") +
#   theme_minimal(base_family = "Roboto Condensed") +
#   theme(panel.grid = element_blank(), axis.ticks.y = element_line()) +
#   guides(fill = guide_legend(reverse = TRUE))
# COLLAPSE SUM OF ACTIVITIES BY QUARTER
all_quarters <- df %>% count(quarter, sum_all) # %>% mutate(sum_all = as.character(sum_all))
# CREATE DATA GRAPHIC!
all_quarters_plot <- ggplot(all_quarters, aes(fill = sum_all, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 4, flip = TRUE, height = 0.95, width = 0.95) +
scale_fill_manual(values = c("#B3ACD3", "#8073AD", "#80CEC2", "#359890")) +
#scale_colour_manual(values = c("white", "black", "white", "white")) +
#scale_colour_manual(values = c(alpha("black", 1/3), "black", alpha("black", 1/3), alpha("black", 1/3))) +
facet_wrap(~quarter, nrow = 1, strip.position = "top") +
#facet_grid(rows = vars(quarter)) +
scale_x_discrete() +
scale_y_continuous(labels = function(x) x * 4, # make this multiplier the same as n_rows
expand = c(0,0)) +
#ggthemes::scale_fill_tableau(name=NULL) +
coord_equal() +
#labs(title = "Activities Data Waffle Bar Chart by Quarter, 2020", subtitle = "1 square = 1 day") +
labs(title = "Mosaic Plot of Activities Data by Quarter, 2020", subtitle = "1 square = 1 day") +
xlab("\nQuarter") + ylab("Number of days\n") +
theme(axis.title.y = element_text(margin = margin(t=2, r=0, b=2, l=0))) +
theme(axis.title.x = element_text(margin = margin(t=4, r=0, b=4, l=0))) +
theme_minimal(base_family = "Trebuchet MS") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line()) +
#theme(legend.position = "bottom") +
guides(fill = guide_legend(title = "Days with:")) +
theme(strip.text.x = element_text(hjust = 0.5))
#guides(fill = guide_legend(reverse = TRUE)) #what is the purpose of this line?
all_quarters_plot
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::dep_path()
blogdown::stop_server()
blogdown::serve_site()
### note the days I was out of commission cos of procedure
### note the days where DNT was coded to 0
### waffle chart mock ups in Excel first - what do colors denote? range? flags? multiple times a week? 2 out of 3 achieved? etc.
rm(list = ls())
# READ IN LIBRARIES
library(tidyverse) ; library(lubridate) ; library(hrbrthemes) ; library(waffle) ; library(ggplot2) ; library(dplyr)
# CREATE TIME DATA FRAME
start_date <- as.Date("2020-01-01")
end_date <- as.Date("2020-12-31")
time <- tibble(date = seq(start_date, end_date, by = "1 day"))
time$week <- format(time$date, "%W")
time$day <- format(time$date, "%A")
time$day_n <- format(time$date, "%u")
time$month <- format(time$date, "%B")
time$month_n <- format(time$date, "%m")
time$quarter <- quarter(time$date) # optional to specify `with_year = TRUE`
#time$week <- seq(1, 13, 7)
#time$n <- wday(time$date)
#time$day <- as.Date(time$date, format = "%A")
# IMPORT ACTIVITIES DATA
activities <- read.csv("C:/Users/John Jay REC/Downloads/activities_df.csv") #366 obs 6 vars
# CHECK
#activities %>% filter(workout_or_not == "?" | mat_pt_mobility_session == "?" | incidental_exercise == "?") %>% View(.)
# Replace DNT with 0
activities <- activities %>%
mutate(workout_or_not = replace(workout_or_not, workout_or_not == "DNT", 0),
mat_pt_mobility_session = replace(mat_pt_mobility_session, mat_pt_mobility_session == "DNT", 0),
incidental_exercise = replace(incidental_exercise, incidental_exercise == "DNT", 0)) %>%
mutate(workout_or_not = as.numeric(workout_or_not),
mat_pt_mobility_session = as.numeric(mat_pt_mobility_session),
incidental_exercise = as.numeric(incidental_exercise))
#
#str(activities)
# CONVERT DATE
activities$date <- as.Date(activities$date ,format = "%m/%d/%Y")
# JOIN ACTIVITIES DATA TO TIME DATA
df <- left_join(time, activities, by = c("date")) #366 obs 12 vars
# COMPUTE SUM OF ACTIVITIES FOR EACH DAY
df <- df %>%
mutate(sum_workout_mobility = workout_or_not + mat_pt_mobility_session,
sum_workout_incidental = workout_or_not + incidental_exercise,
sum_all = workout_or_not + mat_pt_mobility_session + incidental_exercise)
# CONVERT TO FACTOR WITH LABELS
df <- df %>% mutate(quarter= factor(quarter, levels=c(1,2,3,4),
labels=c("Jan to March", "April to June", "July to Sept", "Oct to Dec")),
sum_all = factor(sum_all, levels = c(0,1,2,3),
labels = c("0 recorded activity", "1 activity", "2 activities", "3 activities")))
# by_week <- df %>% group_by(week) %>%
#   summarise(count_workout_mobility = sum(sum_workout_mobility),
#             count_workout_incidental = sum(sum_workout_incidental),
#             count_all = sum(sum_all)) %>% ungroup()
# by_month <- df %>% group_by(month_n, month) %>%
#   summarise(count_workout_mobility = sum(sum_workout_mobility),
#             count_workout_incidental = sum(sum_workout_incidental),
#             count_all = sum(sum_all))
# best looking results b/c obscures, helpfully, times where was out of commission due to procedures
# by_quarter <- df %>% group_by(quarter) %>%
#   summarise(count_workout_mobility = sum(sum_workout_mobility),
#             count_workout_incidental = sum(sum_workout_incidental),
#             count_all = sum(sum_all))
# EVERY TWO MONTHS SO SIX DATA POINTS?
# PLOT
# ggplot(by_week,aes(x=week, y=count_all, group = 1)) + geom_line(color = "Steelblue", size = 1)
# ggplot(by_month,aes(x=month_n, y=count_all, group = 1)) + geom_line(color = "Steelblue", size = 1)
# ggplot(by_quarter,aes(x=quarter, y=count_all, group = 1)) + geom_line(color = "Steelblue", size = 1)
#
#df1 <- df %>% select(date, week, day, day_n, month, month_n, quarter, starts_with("sum")) %>% View()
# SOURCE: https://rud.is/rpubs/building-waffle-charts.html
# View(storms)
# storms_df <- storms %>% filter(year >= 2010) %>% count(year, status)
# str(storms_df)
#
# ggplot(storms_df, aes(fill = status, values = n)) +
#   geom_waffle(color = "white", size = .25, n_rows = 10, flip = TRUE) +
#   facet_wrap(~year, nrow = 1, strip.position = "bottom") +
#   scale_x_discrete() +
#   scale_y_continuous(labels = function(x) x * 10, # make this multiplier the same as n_rows
#                      expand = c(0,0)) +
#   ggthemes::scale_fill_tableau(name=NULL) +
#   coord_equal() +
#   labs(title = "Faceted Waffle Bar Chart", subtitle = "{dplyr} storms data", x = "Year", y = "Count") +
#   theme_minimal(base_family = "Roboto Condensed") +
#   theme(panel.grid = element_blank(), axis.ticks.y = element_line()) +
#   guides(fill = guide_legend(reverse = TRUE))
# COLLAPSE SUM OF ACTIVITIES BY QUARTER
all_quarters <- df %>% count(quarter, sum_all) # %>% mutate(sum_all = as.character(sum_all))
# CREATE DATA GRAPHIC!
all_quarters_plot <- ggplot(all_quarters, aes(fill = sum_all, values = n)) +
geom_waffle(color = "white", size = .25, n_rows = 4, flip = TRUE, height = 0.95, width = 0.95) +
scale_fill_manual(values = c("#B3ACD3", "#8073AD", "#80CEC2", "#359890")) +
#scale_colour_manual(values = c("white", "black", "white", "white")) +
#scale_colour_manual(values = c(alpha("black", 1/3), "black", alpha("black", 1/3), alpha("black", 1/3))) +
facet_wrap(~quarter, nrow = 1, strip.position = "top") +
#facet_grid(rows = vars(quarter)) +
scale_x_discrete() +
scale_y_continuous(labels = function(x) x * 4, # make this multiplier the same as n_rows
expand = c(0,0)) +
#ggthemes::scale_fill_tableau(name=NULL) +
coord_equal() +
#labs(title = "Activities Data Waffle Bar Chart by Quarter, 2020", subtitle = "1 square = 1 day") +
labs(title = "Mosaic Plot of Activities Data by Quarter, 2020", subtitle = "1 square = 1 day") +
xlab("\nQuarter") + ylab("Number of days\n") +
theme(axis.title.y = element_text(margin = margin(t=2, r=0, b=2, l=0))) +
theme(axis.title.x = element_text(margin = margin(t=4, r=0, b=4, l=0))) +
theme_minimal(base_family = "Trebuchet MS") +
theme(panel.grid = element_blank(), axis.ticks.y = element_line()) +
#theme(legend.position = "bottom") +
guides(fill = guide_legend(title = "Days with:")) +
theme(strip.text.x = element_text(hjust = 0.5))
#guides(fill = guide_legend(reverse = TRUE)) #what is the purpose of this line?
all_quarters_plot
?ggsave
ggsave(filename = "test.png",plot = all_quarters_plot,width = 5, height = 4, dpi = 300, units = "in", device='png')
blogdown::stop_server()
blogdown::serve_site()
blog
blogdown::serve_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::preview_site()
knitr::opts_chunk$set(comment = "#", fig.retina = 2)
# comment out to regenerate plots, output, etc.
knitr::opts_chunk$set(echo = FALSE, eval = FALSE)
library(tidyverse)
library(lubridate)
library(hrbrthemes)
library(waffle)
library(ggplot2)
library(dplyr)
library(googlesheets4)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
